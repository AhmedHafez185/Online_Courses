package net.ahmed.app.dal.entity;
// Generated Jul 16, 2020 12:45:46 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.web.multipart.MultipartFile;

/**
 * Course generated by hbm2java
 */
@Entity(name = "course")
public class Course implements java.io.Serializable {

    private Integer id;
    private Category category;
    private Instructor instructor;
    private String title;
    private String listOfOutlines;
    private String description;
    private String picture;
    private float price;
    private Float discounts;
    private Date startDate;
    private Date endDate;
    private MultipartFile coursePic;
    private Set<Review> reviews = new HashSet<Review>(0);
    private Set<Enrollment> enrollments = new HashSet<Enrollment>(0);
    private Set<CourseOutlines> outlines = new HashSet<CourseOutlines>(0);

    public Course() {
    }

    public Course(Category category, Instructor instructor, String title, float price, int cartId) {
        this.category = category;
        this.instructor = instructor;
        this.title = title;
        this.price = price;
    }

    public Course(Category category, Instructor instructor, String title, String description, String picture, float price, Float discounts, int cartId, Set<Review> reviews, Set<Enrollment> enrollments) {
        this.category = category;
        this.instructor = instructor;
        this.title = title;
        this.description = description;
        this.picture = picture;
        this.price = price;
        this.discounts = discounts;
        this.reviews = reviews;
        this.enrollments = enrollments;
    }

    public Course(String title, String description, String picture, float price, Float discounts) {
        this.title = title;
        this.description = description;
        this.picture = picture;
        this.price = price;
        this.discounts = discounts;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "category_id", nullable = false)
    public Category getCategory() {
        return this.category;
    }

    public void setCategory(Category category) {
        this.category = category;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "instructor_id", nullable = false)
    public Instructor getInstructor() {
        return this.instructor;
    }

    public void setInstructor(Instructor instructor) {
        this.instructor = instructor;
    }

    @Column(name = "title", nullable = false)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @Column(name = "description", length = 65535)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "picture")
    public String getPicture() {
        return this.picture;
    }

    public void setPicture(String picture) {
        this.picture = picture;
    }

    @Column(name = "price", nullable = false, precision = 12, scale = 0)
    public float getPrice() {
        return this.price;
    }

    public void setPrice(float price) {
        this.price = price;
    }

    @Column(name = "discounts", precision = 12, scale = 0)
    public Float getDiscounts() {
        return this.discounts;
    }

    public void setDiscounts(Float discounts) {
        this.discounts = discounts;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "course")
    public Set<Review> getReviews() {
        return this.reviews;
    }

    public void setReviews(Set<Review> reviews) {
        this.reviews = reviews;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "course")
    public Set<Enrollment> getEnrollments() {
        return this.enrollments;
    }

    public void setEnrollments(Set<Enrollment> enrollments) {
        this.enrollments = enrollments;
    }

    

    @Temporal(TemporalType.DATE)
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    @Column(name = "start_date", nullable = false, length = 10)
    public Date getStartDate() {
        return startDate;
    }
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }
    @Temporal(TemporalType.DATE)
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    @Column(name = "end_date", nullable = false, length = 10)
    public Date getEndDate() {
        return endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    @Transient
    public MultipartFile getCoursePic() {
        return coursePic;
    }

    public void setCoursePic(MultipartFile coursePic) {
        this.coursePic = coursePic;
    }
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "course",cascade = CascadeType.PERSIST)
    public Set<CourseOutlines> getOutlines() {
        return outlines;
    }

    public void setOutlines(Set<CourseOutlines> outlines) {
        this.outlines = outlines;
    }
    @Transient
    public String getListOfOutlines() {
        return listOfOutlines;
    }

    public void setListOfOutlines(String listOfOutlines) {
        this.listOfOutlines = listOfOutlines;
    }
    
    
}
